colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
View(compares)
compares_melt<-melt(compares)
View(compares_melt)
colnames(compares_melt)<-c('Method', 'Metrics', 'Performance')
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
res_all_std[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
colnames(compares_melt)<-c('Method', 'Metrics', 'Performance')
factor(compares_melt$Method)<-c('MVIDIA3_minmax', 'Concat3_minmax', 'MLE3_minmax',
'MVIDIA3_std', 'Concat3_std', 'MLE3_std')
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
colnames(compares_melt)<-c('Method', 'Metrics', 'Performance')
compares_melt$Method<-as.factor('MVIDIA3_minmax', 'Concat3_minmax', 'MLE3_minmax',
'MVIDIA3_std', 'Concat3_std', 'MLE3_std')
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
res_all_std[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
colnames(compares_melt)<-c('Method', 'Metrics', 'Performance')
View(compares_melt)
factor(compares_melt$Method)
levels(compares_melt$Method)
compares$Method<-as.factor(compares$Method)
levels(compares$Method)
levels(compares$Method)<-c('MVIDIA3_minmax', 'Concat3_minmax', 'MLE3_minmax',
#                                 'MVIDIA3_std', 'Concat3_std', 'MLE3_std')
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
res_all_std[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
compares_melt$Method<-as.factor(compares_melt$Method)
colnames(compares_melt)<-c('Method', 'Metrics', 'Performance')
compares_melt$Method<-as.factor(compares_melt$Method)
levels(compares_melt$Method)<-c('MVIDIA3_minmax', 'Concat3_minmax', 'MLE3_minmax',
'MVIDIA3_std', 'Concat3_std', 'MLE3_std')
col<-c('#00334d','#00aaff', '#b3e6ff',
'#006633','#00ff80','#ccffe6'
)
ggboxplot(compares_melt, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = plt)+
labs(x = '', y = 'Metric value')+
scale_x_discrete(limits=unique(mat_cb$Metric)) +
scale_y_continuous(limits = c(min(mat_cb$Performance-0.05),
max(mat_cb$Performance+0.05)))+theme_classic() +
theme(axis.title.y= element_text(size=12, face = 'bold'))+
theme(axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'))+
theme(legend.position = "right")+
stat_summary(fun=mean, geom="point", shape=20, aes(group=Method),
position=position_dodge(.8), size=2, color="red", fill="red")+
theme(plot.title = element_text(size = 12,hjust = 0.5, face = "bold"))+
#geom_hline(yintercept=0,linewidth=0.5,linetype=2)+
theme(text=element_text(family="Times New Roman", size=12))
ggboxplot(compares_melt, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = 'Comparing methods with different scaling strategies')+
labs(x = '', y = 'Metric value')+
scale_x_discrete(limits=unique(mat_cb$Metric)) +
scale_y_continuous(limits = c(min(mat_cb$Performance-0.05),
max(mat_cb$Performance+0.05)))+theme_classic() +
theme(axis.title.y= element_text(size=12, face = 'bold'))+
theme(axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'))+
theme(legend.position = "right")+
stat_summary(fun=mean, geom="point", shape=20, aes(group=Method),
position=position_dodge(.8), size=2, color="red", fill="red")+
theme(plot.title = element_text(size = 12,hjust = 0.5, face = "bold"))+
#geom_hline(yintercept=0,linewidth=0.5,linetype=2)+
theme(text=element_text(family="Times New Roman", size=12))
View(compares_melt)
mat_cb<-compares_melt
ggboxplot(mat_cb, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = 'Comparing methods with different scaling strategies')+
labs(x = '', y = 'Metric value')+
scale_x_discrete(limits=unique(mat_cb$Metric)) +
scale_y_continuous(limits = c(min(mat_cb$Performance-0.05),
max(mat_cb$Performance+0.05)))+theme_classic() +
theme(axis.title.y= element_text(size=12, face = 'bold'))+
theme(axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'))+
theme(legend.position = "right")+
stat_summary(fun=mean, geom="point", shape=20, aes(group=Method),
position=position_dodge(.8), size=2, color="red", fill="red")+
theme(plot.title = element_text(size = 12,hjust = 0.5, face = "bold"))+
#geom_hline(yintercept=0,linewidth=0.5,linetype=2)+
theme(text=element_text(family="Times New Roman", size=12))
View(mat_cb)
ggboxplot(mat_cb, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = 'Comparing methods with different scaling strategies')+
labs(x = '', y = 'Metric value')#+
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
res_all_std[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
compares_melt$Method<-as.factor(compares_melt$Method)
colnames(compares_melt)<-c('Method', 'Metric', 'Performance')
compares_melt$Method<-as.factor(compares_melt$Method)
levels(compares_melt$Method)<-c('MVIDIA3_minmax', 'Concat3_minmax', 'MLE3_minmax',
'MVIDIA3_std', 'Concat3_std', 'MLE3_std')
col<-c('#00334d','#00aaff', '#b3e6ff',
'#006633','#00ff80','#ccffe6'
)
mat_cb<-compares_melt
ggboxplot(mat_cb, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = 'Comparing methods with different scaling strategies')+
labs(x = '', y = 'Metric value')+
scale_x_discrete(limits=unique(mat_cb$Metric)) +
scale_y_continuous(limits = c(min(mat_cb$Performance-0.05),
max(mat_cb$Performance+0.05)))+theme_classic() +
theme(axis.title.y= element_text(size=12, face = 'bold'))+
theme(axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'))+
theme(legend.position = "right")+
stat_summary(fun=mean, geom="point", shape=20, aes(group=Method),
position=position_dodge(.8), size=2, color="red", fill="red")+
theme(plot.title = element_text(size = 12,hjust = 0.5, face = "bold"))+
#geom_hline(yintercept=0,linewidth=0.5,linetype=2)+
theme(text=element_text(family="Times New Roman", size=12))
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
res_all_std[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
compares_melt$Method<-as.factor(compares_melt$Method)
colnames(compares_melt)<-c('Method', 'Metric', 'Performance')
compares_melt$Method<-as.factor(compares_melt$Method)
levels(compares_melt$Method)<-c('MVIDIA3_minmax','MVIDIA3_std', 'Concat3_minmax',
'Concat3_std', 'MLE3_minmax', 'MLE3_std')
col<-c("#CD6155", '#ffb3b3','#FF1493','#ffb3ec','#40E0D0','#c2f0f0'
)
mat_cb<-compares_melt
ggboxplot(mat_cb, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = 'Comparing methods with different scaling strategies')+
labs(x = '', y = 'Metric value')+
scale_x_discrete(limits=unique(mat_cb$Metric)) +
scale_y_continuous(limits = c(min(mat_cb$Performance-0.05),
max(mat_cb$Performance+0.05)))+theme_classic() +
theme(axis.title.y= element_text(size=12, face = 'bold'))+
theme(axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'))+
theme(legend.position = "right")+
stat_summary(fun=mean, geom="point", shape=20, aes(group=Method),
position=position_dodge(.8), size=2, color="red", fill="red")+
theme(plot.title = element_text(size = 12,hjust = 0.5, face = "bold"))+
#geom_hline(yintercept=0,linewidth=0.5,linetype=2)+
theme(text=element_text(family="Times New Roman", size=12))
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
res_all_std[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
compares_melt$Method<-as.factor(compares_melt$Method)
colnames(compares_melt)<-c('Method', 'Metric', 'Performance')
compares_melt$Method<-gsub('Prec', 'Precision', compares_melt$Method)
compares_melt$Method<-gsub('Rec', 'Recall', compares_melt$Method)
compares_melt$Method<-gsub('pauc005', 'pAUC0.05', compares_melt$Method)
compares_melt$Method<-as.factor(compares_melt$Method)
levels(compares_melt$Method)<-c('MVIDIA3_minmax','MVIDIA3_std', 'Concat3_minmax',
'Concat3_std', 'MLE3_minmax', 'MLE3_std')
col<-c("#CD6155", '#ffb3b3','#FF1493','#ffb3ec','#40E0D0','#c2f0f0'
)
mat_cb<-compares_melt
ggboxplot(mat_cb, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = 'Comparing methods with different scaling strategies')+
labs(x = '', y = 'Metric value')+
scale_x_discrete(limits=unique(mat_cb$Metric)) +
scale_y_continuous(limits = c(min(mat_cb$Performance-0.05),
max(mat_cb$Performance+0.05)))+theme_classic() +
theme(axis.title.y= element_text(size=12, face = 'bold'))+
theme(axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'))+
theme(legend.position = "right")+
stat_summary(fun=mean, geom="point", shape=20, aes(group=Method),
position=position_dodge(.8), size=2, color="red", fill="red")+
theme(plot.title = element_text(size = 12,hjust = 0.5, face = "bold"))+
#geom_hline(yintercept=0,linewidth=0.5,linetype=2)+
theme(text=element_text(family="Times New Roman", size=12))
View(mcc_melt)
View(compares_melt)
compares_minmax<-cbind(res_all_minmax$method,
res_all_minmax[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_minmax))])
compares_std<-cbind(res_all_std$method,
res_all_std[,match(c('Prec','Rec', 'Mcc', 'pauc005'),
colnames(res_all_std))])
colnames(compares_minmax)[1]<-'Method'
colnames(compares_std)[1]<-'Method'
compares<-rbind(compares_minmax, compares_std)
compares_melt<-melt(compares)
compares_melt$Method<-as.factor(compares_melt$Method)
colnames(compares_melt)<-c('Method', 'Metric', 'Performance')
compares_melt$Metric<-gsub('Prec', 'Precision', compares_melt$Metric)
compares_melt$Metric<-gsub('Rec', 'Recall', compares_melt$Metric)
compares_melt$Metric<-gsub('pauc005', 'pAUC0.05', compares_melt$Metric)
compares_melt$Method<-as.factor(compares_melt$Method)
levels(compares_melt$Method)<-c('MVIDIA3_minmax','MVIDIA3_std', 'Concat3_minmax',
'Concat3_std', 'MLE3_minmax', 'MLE3_std')
col<-c("#CD6155", '#ffb3b3','#FF1493','#ffb3ec','#40E0D0','#c2f0f0'
)
mat_cb<-compares_melt
ggboxplot(mat_cb, "Metric", "Performance",width = 0.7, size=1,
color = "Method", fill = 'Method', alpha=0.5, palette =col,
add = "jitter", add.params = list(alpha=0.1,size=0.7),
title = 'Comparing methods with different scaling strategies')+
labs(x = '', y = 'Metric value')+
scale_x_discrete(limits=unique(mat_cb$Metric)) +
scale_y_continuous(limits = c(min(mat_cb$Performance-0.05),
max(mat_cb$Performance+0.05)))+theme_classic() +
theme(axis.title.y= element_text(size=12, face = 'bold'))+
theme(axis.title.x = element_text(size = 10),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'))+
theme(legend.position = "right")+
stat_summary(fun=mean, geom="point", shape=20, aes(group=Method),
position=position_dodge(.8), size=2, color="red", fill="red")+
theme(plot.title = element_text(size = 12,hjust = 0.5, face = "bold"))+
#geom_hline(yintercept=0,linewidth=0.5,linetype=2)+
theme(text=element_text(family="Times New Roman", size=12))
#######################
####
# check the affection of scaling methods on patient diagnosis task
pd_res_minmax<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results_minmax.csv', sep = ',', header = T)
pd_res_std<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results.csv', sep = ',', header = T)
View(pd_res_minmax)
View(pd_res_std)
pd_res_minmax$X<-paste0(pd_res_minmax$X, '_minmax')
pd_res_std$X<-paste0(pd_res_std$X, '_std')
View(pd_res_minmax)
View(pd_res_std)
View(res_std)
View(pd_res_minmax)
View(pd_res_std)
MCCs<-rbind(cbind(pd_res_minmax$X, pd_res_minmax$FeatureSet, pd_res_minmax$Mcc),
cbind(pd_res_std$X, pd_res_std$FeatureSet, pd_res_std$Mcc))
View(MCCs)
MCCs<-as.data.frame(MCCs)
pd_res_minmax<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results_minmax.csv', sep = ',', header = T)
pd_res_std<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results.csv', sep = ',', header = T)
pd_res_minmax$X<-paste0(pd_res_minmax$X, '_minmax')
pd_res_std$X<-paste0(pd_res_std$X, '_std')
MCCs<-rbind(cbind(pd_res_minmax$X, pd_res_minmax$FeatureSet, pd_res_minmax$Mcc),
cbind(pd_res_std$X, pd_res_std$FeatureSet, pd_res_std$Mcc))
MCCs<-as.data.frame(MCCs)
colnames(MCCs)<-c('Method', 'signature', 'MCC')
MCCs$MCC<-round(as.numeric(MCCs$MCC), 3)
hp_mcc<-ggplot(MCCs, aes(x=Method,y=signature,fill=MCC,label=MCC)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Feature value (disease diagnosis method)')+ylab('Feature set selection (DEA)')+scale_y_discrete(limits=MCCs$signature)
hp_mcc
View(MCCs)
MCCs$MCC
pd_res_minmax<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results_minmax.csv', sep = ',', header = T)
pd_res_std<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results.csv', sep = ',', header = T)
pd_res_minmax$X<-paste0(pd_res_minmax$X, '_minmax')
pd_res_std$X<-paste0(pd_res_std$X, '_std')
MCCs<-rbind(cbind(pd_res_minmax$X, pd_res_minmax$FeatureSet, pd_res_minmax$Mcc),
cbind(pd_res_std$X, pd_res_std$FeatureSet, pd_res_std$Mcc))
MCCs<-as.data.frame(MCCs)
colnames(MCCs)<-c('Method', 'signature', 'MCC')
MCCs$signature<-gsub('union','', MCCs$signature)
MCCs$MCC<-round(as.numeric(MCCs$MCC), 3)
hp_mcc<-ggplot(MCCs, aes(x=Method,y=signature,fill=MCC,label=MCC)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Feature value (disease diagnosis method)')+ylab('Feature set selection (DEA)')+scale_y_discrete(limits=unique(MCCs$signature))
hp_mcc
View(pd_res_minmax)
pd_res_minmax<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results_minmax.csv', sep = ',', header = T)
pd_res_std<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results.csv', sep = ',', header = T)
pd_res_minmax$X<-paste0(pd_res_minmax$X, '_minmax')
pd_res_std$X<-paste0(pd_res_std$X, '_std')
pd_res_minmax<-pd_res_minmax[c(grep('GCCA', pd_res_minmax$X),
grep('MVIDIA', pd_res_minmax$X),
grep('Concat-MVIDIA', pd_res_minmax$X)),]
pd_res_std<-pd_res_std[c(grep('GCCA', pd_res_std$X),
grep('MVIDIA', pd_res_std$X),
grep('Concat-MVIDIA', pd_res_std$X)),]
MCCs<-rbind(cbind(pd_res_minmax$X, pd_res_minmax$FeatureSet, pd_res_minmax$Mcc),
cbind(pd_res_std$X, pd_res_std$FeatureSet, pd_res_std$Mcc))
MCCs<-as.data.frame(MCCs)
colnames(MCCs)<-c('Method', 'signature', 'MCC')
MCCs$signature<-gsub('union','', MCCs$signature)
MCCs$MCC<-round(as.numeric(MCCs$MCC), 3)
hp_mcc<-ggplot(MCCs, aes(x=Method,y=signature,fill=MCC,label=MCC)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Feature value (disease diagnosis method)')+ylab('Feature set selection (DEA)')+scale_y_discrete(limits=unique(MCCs$signature))
hp_mcc
View(pd_res_minmax)
AUCs<-rbind(cbind(pd_res_minmax$X, pd_res_minmax$FeatureSet, pd_res_minmax$auc),
cbind(pd_res_std$X, pd_res_std$FeatureSet, pd_res_std$auc))
AUCs<-as.data.frame(AUCs)
colnames(AUCs)<-c('Method', 'signature', 'AUC')
AUCs$signature<-gsub('union_','', AUCs$signature)
AUCs$signature<-gsub('union','', AUCs$signature)
AUCs$AUC<-round(as.numeric(AUCs$AUC), 3)
hp_mcc<-ggplot(AUCs, aes(x=Method,y=signature,fill=AUC,label=AUC)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Feature value (disease diagnosis method)')+ylab('Feature set selection (DEA)')+scale_y_discrete(limits=unique(AUCs$signature))
hp_auc
AUCs<-rbind(cbind(pd_res_minmax$X, pd_res_minmax$FeatureSet, pd_res_minmax$auc),
cbind(pd_res_std$X, pd_res_std$FeatureSet, pd_res_std$auc))
AUCs<-as.data.frame(AUCs)
colnames(AUCs)<-c('Method', 'signature', 'AUC')
AUCs$signature<-gsub('union_','', AUCs$signature)
AUCs$signature<-gsub('union','', AUCs$signature)
AUCs$AUC<-round(as.numeric(AUCs$AUC), 3)
hp_auc<-ggplot(AUCs, aes(x=Method,y=signature,fill=AUC,label=AUC)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Feature value (disease diagnosis method)')+ylab('Feature set selection (DEA)')+scale_y_discrete(limits=unique(AUCs$signature))
hp_auc
hp_mcc
hp_mcc
pd_res_minmax<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results_minmax.csv', sep = ',', header = T)
pd_res_std<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Patient_diagnosis/data/TPD_patient_diagnosis_results.csv', sep = ',', header = T)
pd_res_minmax$X<-paste0(pd_res_minmax$X, '_minmax')
pd_res_std$X<-paste0(pd_res_std$X, '_std')
pd_res_minmax<-pd_res_minmax[c(grep('GCCA', pd_res_minmax$X),
grep('MVIDIA', pd_res_minmax$X),
grep('Concat-MVIDIA', pd_res_minmax$X)),]
pd_res_std<-pd_res_std[c(grep('GCCA', pd_res_std$X),
grep('MVIDIA', pd_res_std$X),
grep('Concat-MVIDIA', pd_res_std$X)),]
MCCs<-rbind(cbind(pd_res_minmax$X, pd_res_minmax$FeatureSet, pd_res_minmax$Mcc),
cbind(pd_res_std$X, pd_res_std$FeatureSet, pd_res_std$Mcc))
MCCs<-as.data.frame(MCCs)
colnames(MCCs)<-c('Method', 'signature', 'MCC')
MCCs$signature<-gsub('union_','', MCCs$signature)
MCCs$signature<-gsub('union','', MCCs$signature)
MCCs$MCC<-round(as.numeric(MCCs$MCC), 3)
hp_mcc<-ggplot(MCCs, aes(x=Method,y=signature,fill=MCC,label=MCC)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Feature value (disease diagnosis method)')+ylab('Feature set selection (DEA)')+scale_y_discrete(limits=unique(MCCs$signature))
hp_mcc
cc_minmax<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Single_cell_clustering/data/SC_DDA_DIA_clustering_minmax.csv', sep = ',', header = T)
cc_std<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Single_cell_clustering/data/SC_DDA_DIA_clustering_std.csv', sep = ',', header = T)
View(cc_minmax)
View(cc_std)
View(cc_minmax)
cc_minmax$in_type<-paste0(cc_minmax$in_type, '_minmax')
cc_std$in_type<-paste0(cc_std$in_type, '_std')
View(cc_minmax)
View(cc_std)
ccs<-rbind(cc_minmax, cc_std)
View(ccs)
View(ccs)
ccs<-ccs[,2:5]
View(ccs)
cc_melt<-melt(ccs)
View(cc_melt)
View(cc_melt)
hp_cc<-ggplot(cc_melt, aes(x=Method,y=Metric,fill=Performance,label=Performance)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Methods')+ylab('Metrics')+scale_y_discrete(limits=unique(cc_melt$Metric))
hp_cc
cc_minmax<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Single_cell_clustering/data/SC_DDA_DIA_clustering_minmax.csv', sep = ',', header = T)
cc_std<-read.table('E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/Single_cell_clustering/data/SC_DDA_DIA_clustering_std.csv', sep = ',', header = T)
cc_minmax$in_type<-paste0(cc_minmax$in_type, '_minmax')
cc_std$in_type<-paste0(cc_std$in_type, '_std')
ccs<-rbind(cc_minmax, cc_std)
ccs<-ccs[,2:5]
cc_melt<-melt(ccs)
colnames(cc_melt)<-c('Method', 'Metric', 'Performance')
hp_cc<-ggplot(cc_melt, aes(x=Method,y=Metric,fill=Performance,label=Performance)) +
geom_tile() + geom_text() + scale_fill_distiller(palette = "Greens", direction = 1)+
theme(text=element_text(size=13), axis.text.x = element_text(angle=-30))+
xlab('Methods')+ylab('Metrics')+scale_y_discrete(limits=unique(cc_melt$Metric))
hp_cc
View(cc_std)
View(compares_minmax)
View(compares)
258/6
View(compares_minmax)
View(res_all_minmax)
write.table(res_all_minmax, 'E:/proteomics/manus4_1/draft/Figures/supp.Fig/data/DEA_scaling_minmax.csv', col.names = T, row.names = F, sep = ',')
write.table(res_all_std, 'E:/proteomics/manus4_1/draft/Figures/supp.Fig/data/DEA_scaling_std.csv', col.names = T, row.names = F, sep = ',')
folder_minmax<-'E:/proteomics/manus4_3/3views_test_0.05_auc_blank_blank_remove_0_h/'
folder_std<-'E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/DEA/res_std/'
metrics_minmax<-vector()
metrics_std<-vector()
datas<-c()
mths<-c()
folds<-c()
method_names<-c('MVIDIA3', 'Concat3', 'MLE3')
test_types<-c('union_GCCA_all_rescore', 'union_KNN_all_rescore', 'union_MLE_all_rescore')
dts<-read.table('D:/data/benchmark/data/dataset_info/DDA_Frag.txt', sep = '\t', header = T)
for (i in 1:length(dts$dataset)) {
for (subfold in c('temp0_limma_min_FragPipe', 'temp1_ROTS_min_FragPipe', 'temp2_limma_min_Maxquant','temp3_ROTS_min_Maxquant')) {
res_file_minmax<- paste0(folder_minmax, subfold,'/',dts$dataset[i], '/',dts$dataset[i], '__metrics_all.csv')
res_file_std<- paste0(folder_std, subfold,'/',dts$dataset[i], '/',dts$dataset[i], '__metrics_all.csv')
if (file.exists(res_file_minmax)){
res_minmax<-read.table(res_file_minmax, sep = ',', header = T)
res_std<-read.table(res_file_std, sep = ',', header = T)
for (j in 1:3){
metrics_minmax<-rbind(metrics_minmax, res_minmax[which(res_minmax$test_type==test_types[j]),])
metrics_std<-rbind(metrics_std, res_std[which(res_std$test_type==test_types[j]),])
datas<-c(datas, dts$dataset[i])
mths<-c(mths, method_names[j])
folds<-c(folds, subfold)
}
}
}
}
res_all_minmax<-data.frame(dataset=datas, platform=folds, method=paste0(mths, '_minmax'))
res_all_minmax<-cbind(res_all_minmax, platform=folds, as.data.frame(metrics_minmax))
res_all_std<-data.frame(dataset=datas, method=paste0(mths, '_std'))
res_all_std<-cbind(res_all_std, as.data.frame(metrics_std))
write.table(res_all_minmax, 'E:/proteomics/manus4_1/draft/Figures/supp.Fig/data/DEA_scaling_minmax.csv', col.names = T, row.names = F, sep = ',')
write.table(res_all_std, 'E:/proteomics/manus4_1/draft/Figures/supp.Fig/data/DEA_scaling_std.csv', col.names = T, row.names = F, sep = ',')
folder_minmax<-'E:/proteomics/manus4_3/3views_test_0.05_auc_blank_blank_remove_0_h/'
folder_std<-'E:/proteomics/manus4_1/draft/Supplementary_codes/Result_reproducing/DEA/res_std/'
metrics_minmax<-vector()
metrics_std<-vector()
datas<-c()
mths<-c()
folds<-c()
method_names<-c('MVIDIA3', 'Concat3', 'MLE3')
test_types<-c('union_GCCA_all_rescore', 'union_KNN_all_rescore', 'union_MLE_all_rescore')
dts<-read.table('D:/data/benchmark/data/dataset_info/DDA_Frag.txt', sep = '\t', header = T)
for (i in 1:length(dts$dataset)) {
for (subfold in c('temp0_limma_min_FragPipe', 'temp1_ROTS_min_FragPipe', 'temp2_limma_min_Maxquant','temp3_ROTS_min_Maxquant')) {
res_file_minmax<- paste0(folder_minmax, subfold,'/',dts$dataset[i], '/',dts$dataset[i], '__metrics_all.csv')
res_file_std<- paste0(folder_std, subfold,'/',dts$dataset[i], '/',dts$dataset[i], '__metrics_all.csv')
if (file.exists(res_file_minmax)){
res_minmax<-read.table(res_file_minmax, sep = ',', header = T)
res_std<-read.table(res_file_std, sep = ',', header = T)
for (j in 1:3){
metrics_minmax<-rbind(metrics_minmax, res_minmax[which(res_minmax$test_type==test_types[j]),])
metrics_std<-rbind(metrics_std, res_std[which(res_std$test_type==test_types[j]),])
datas<-c(datas, dts$dataset[i])
mths<-c(mths, method_names[j])
folds<-c(folds, subfold)
}
}
}
}
res_all_minmax<-data.frame(dataset=datas, platform=folds, method=paste0(mths, '_minmax'))
res_all_minmax<-cbind(res_all_minmax, as.data.frame(metrics_minmax))
res_all_std<-data.frame(dataset=datas,platform=folds, method=paste0(mths, '_std'))
res_all_std<-cbind(res_all_std, as.data.frame(metrics_std))
write.table(res_all_minmax, 'E:/proteomics/manus4_1/draft/Figures/supp.Fig/data/DEA_scaling_minmax.csv', col.names = T, row.names = F, sep = ',')
write.table(res_all_std, 'E:/proteomics/manus4_1/draft/Figures/supp.Fig/data/DEA_scaling_std.csv', col.names = T, row.names = F, sep = ',')
